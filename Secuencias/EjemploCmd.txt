C:\Users\Ivan's PC>python
Python 3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 14:57:15) [MSC v.1915 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>>
>>>
>>>
>>> x = "Hola"
>>> x
'Hola'
>>> x[0]="2"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> x = x + "adios"
>>> x
'Holaadios'
>>> print("\a")

>>> print("a\na")
a
a
>>> print("a\\na")
a\na
>>> print("a\\\na")
a\
a
>>> print("a\na")
a
a
>>> print(r"a\na")
a\na
>>> x = "hola"
>>> x.capitalize()
'Hola'
>>> capitalize(x)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'capitalize' is not defined
>>> x.capitalize()
'Hola'
>>> import string
>>> string.capitalize(x)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'string' has no attribute 'capitalize'
>>>
>>> x.count()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: count() takes at least 1 argument (0 given)
>>> count(x)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'count' is not defined
>>> x
'hola'
>>> x.count()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: count() takes at least 1 argument (0 given)
>>> x.count(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: must be str, not int
>>> x.count('h')
1
>>> x.count('H')
0
>>> x
'hola'
>>> x.count('hola')
1
>>> x.count('hol')
1
>>> x = "hoola"
>>> x.count('o')
2
>>> x.endswitdth('a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'endswitdth'
>>> x.endswith('a')
True
>>> x.endswith('ka')
False
>>> x.endswith('la')
True
>>> x.find('la')
3
>>> x.find('a')
4
>>> x
'hoola'
>>> y = [1,2,3]
>>> y = ["1",2,3]
>>> y = ["1","2","3"]
>>> x.join(y)
'1hoola2hoola3'
>>> x.lower()
'hoola'
>>> c = "  d  f g  "
>>> c.lstrip()
'd  f g  '
>>> c.strip()
'd  f g'
>>> x.max()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'max'
>>> max(x)
'o'
>>> min(x)
'a'
>>> x.replace('a', 'b')
'hoolb'
>>> x.replace('oo', 'o')
'hola'
>>> x = 'Hola. Como estas? bien. y tu?'
>>> x.split('.')
['Hola', ' Como estas? bien', ' y tu?']
>>> x.replace('?','.').split('.')
['Hola', ' Como estas', ' bien', ' y tu', '']
>>> x.upper()
'HOLA. COMO ESTAS? BIEN. Y TU?'
>>> x.title()
'Hola. Como Estas? Bien. Y Tu?'
>>> len(x)
29
>>> l = [2,34]
>>> len(l)
2
>>> x[2]
'l'
>>> x[-2]
'u'
>>> l
[2, 34]
>>> l[1] = [2,4,5]
>>> l
[2, [2, 4, 5]]
>>> len(l)
2
>>> len(l[1])
3
>>> len(l[0])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: object of type 'int' has no len()
>>> print(l[0])
2
>>> l[0]
2
>>> l[1]=3
>>> l
[2, 3]
>>> len(l[0])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: object of type 'int' has no len()
>>> print(l[0])
2
>>> len(l[:3])
2
>>>
>>>
>>> lista = [ 2, "a"]
>>> max(lista)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: '>' not supported between instances of 'str' and 'int'
>>> lista = [ 2, 3]
>>> max(lista)
3
>>> max("hola")
'o'
>>> min("hola")
'a'
>>> min(lista)
2
>>> min(lista)
2
>>> lista = []
>>> for i in range(0,10):
...  lista.append(i)
...
>>> lista
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> lista.count(2)
1
>>> lista.insert(2, 7)
>>> lista
[0, 1, 7, 2, 3, 4, 5, 6, 7, 8, 9]
>>> lista.count(7)
2
>>> del lista[3]
>>> lista
[0, 1, 7, 3, 4, 5, 6, 7, 8, 9]
>>> lista.find(3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'find'
>>> while list.count(7)>0:
...
...
  File "<stdin>", line 3

    ^
IndentationError: expected an indented block
>>> while lista.count(7)>0:
...  lista.remove(7)
...
>>> lista
[0, 1, 3, 4, 5, 6, 8, 9]
>>> lista
[0, 1, 3, 4, 5, 6, 8, 9]
>>> lista.reverse()
>>> lista
[9, 8, 6, 5, 4, 3, 1, 0]
>>> lista.sort()
>>> lista
[0, 1, 3, 4, 5, 6, 8, 9]
>>>
>>>
>>> tuple(lista)
(0, 1, 3, 4, 5, 6, 8, 9)
>>> lista
[0, 1, 3, 4, 5, 6, 8, 9]
>>> list((1,2,3))
[1, 2, 3]
>>> mi_dic={"Nombre":"maria","edad":2}
>>> len(mi_dic)
2
>>> type(mi_dic)
<class 'dict'>
>>>
